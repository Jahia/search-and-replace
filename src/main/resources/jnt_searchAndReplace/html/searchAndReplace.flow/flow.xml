<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <var name="flowHandler" class="org.jahia.modules.searchandreplace.webflow.SearchAndReplaceFlowHandler"/>
    <var name="searchAndReplace" class="org.jahia.modules.searchandreplace.webflow.model.SearchAndReplace"/>

    <view-state id="searchAndReplaceFirstStep" model="searchAndReplace">
        <binder>
            <binding property="termToReplace"/>
        </binder>
        <transition on="searchAndReplaceGoToSecondStep" to="searchAndReplaceSecondStep"/>
        <on-exit>
            <evaluate expression="flowHandler.getNodesContains(searchAndReplace, externalContext.requestMap.renderContext)"/>
        </on-exit>
    </view-state>

    <view-state id="searchAndReplaceSecondStep" model="searchAndReplace">
        <binder>
            <binding property="listNodesToBeUpdated"/>
            <binding property="selectAll"/>
        </binder>
        <transition on="searchAndReplacePrevious" to="searchAndReplaceFirstStep" validate="false"/>
        <transition on="searchAndReplaceGoToThirdStep" to="searchAndReplaceThirdStep"/>
        <!--<transition on="" to=""/>-->
    </view-state>

    <view-state id="searchAndReplaceThirdStep" model="searchAndReplace">
        <binder>
            <binding property="replacementTerm"/>
            <binding property="currentNodeInThirdStep"/>
        </binder>
        <transition on="searchAndReplaceSkipThisNode" to="skipThisNode" validate="false"/>
        <transition on="searchAndReplaceInCurrentNode" to="updateThisNode"/>
        <transition on="searchAndReplaceAllNode" to="updateAllNodes"/>
    </view-state>

    <action-state id="skipThisNode">
        <evaluate expression="flowHandler.skipThisNode(searchAndReplace)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="updateThisNode">
        <evaluate expression="flowHandler.replaceThisNode(searchAndReplace, externalContext.requestMap.renderContext)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="updateAllNodes">
        <evaluate expression="flowHandler.replaceAllNodes(searchAndReplace, externalContext.requestMap.renderContext)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="haveNodeToUpdate">
        <evaluate expression="flowHandler.haveNodeToUpdate(searchAndReplace)"/>
        <transition on="yes" to="searchAndReplaceThirdStep"/>
        <transition on="no" to="searchAndReplaceEnd"/>
    </action-state>

    <view-state id="searchAndReplaceEnd" model="searchAndReplace"/>

    <global-transitions>
        <transition on="searchAndReplaceCancel" to="searchAndReplaceFirstStep" bind="false" validate="false">
            <evaluate expression="flowHandler.initSearchAndReplace()" result="flowScope.searchAndReplace"/>
        </transition>
    </global-transitions>
</flow>