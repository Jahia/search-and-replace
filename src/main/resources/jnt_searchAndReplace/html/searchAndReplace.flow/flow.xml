<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

    <var name="flowHandler" class="org.jahia.modules.searchandreplace.webflow.SearchAndReplaceFlowHandler"/>
    <var name="searchAndReplace" class="org.jahia.modules.searchandreplace.webflow.model.SearchAndReplace"/>

    <view-state id="search" model="searchAndReplace">
        <binder>
            <binding property="termToReplace"/>
        </binder>
        <on-entry>
            <evaluate expression="flowHandler.resetSearchAndReplace(searchAndReplace)" result="searchAndReplace"/>
        </on-entry>
        <transition on="goToFilter" to="filter"/>
        <on-exit>
            <evaluate expression="flowHandler.resetListSummary(searchAndReplace)"/>
        </on-exit>
    </view-state>

    <view-state id="filter" model="searchAndReplace">
        <binder>
            <binding property="listNodesToBeUpdated"/>
            <binding property="fromEventID"/>
            <binding property="selectAll"/>
            <binding property="selectedNodeType"/>
            <binding property="dateCreatedBefore"/>
            <binding property="dateCreatedAfter"/>
            <binding property="dateModifiedBefore"/>
            <binding property="dateModifiedAfter"/>
            <binding property="listSelectedFieldsOfNodeType"/>
        </binder>
        <on-render>
            <evaluate expression="flowHandler.getNodesContains(searchAndReplace, externalContext.requestMap.renderContext)"/>
            <evaluate expression="flowHandler.getNodesTypesList(searchAndReplace, externalContext.requestMap.renderContext)"/>
            <evaluate expression="flowHandler.getNodePropertiesList(searchAndReplace, externalContext.requestMap.renderContext)"/>
        </on-render>
        <transition on="goToReplace" to="replace"/>
        <transition on="advancedSearchForm" to="filter"/>
        <transition on="noResult" to="search"/>
        <transition on="cancel" to="search" bind="false" validate="false">
            <evaluate expression="flowHandler.initSearchAndReplace()" result="flowScope.searchAndReplace"/>
        </transition>
    </view-state>

    <view-state id="replace" model="searchAndReplace">
        <binder>
            <binding property="replacementTerm"/>
            <binding property="currentDisplayedNode"/>
        </binder>
        <transition on="skipThisNode" to="skipThisNode"/>
        <transition on="skipAllNode" to="skipAllNode"/>
        <transition on="replaceInCurrentNode" to="updateThisNode"/>
        <transition on="replaceAllNode" to="updateAllNodes"/>
    </view-state>

    <action-state id="skipThisNode">
        <evaluate expression="flowHandler.skipThisNode(searchAndReplace)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="skipAllNode">
        <evaluate expression="flowHandler.skipAllNodes(searchAndReplace)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="updateThisNode">
        <evaluate expression="flowHandler.replaceThisNode(searchAndReplace, externalContext.requestMap.renderContext)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="updateAllNodes">
        <evaluate expression="flowHandler.replaceAllNodes(searchAndReplace, externalContext.requestMap.renderContext)"/>
        <transition to="haveNodeToUpdate"/>
    </action-state>

    <action-state id="haveNodeToUpdate">
        <evaluate expression="flowHandler.haveNodeToUpdate(searchAndReplace)"/>
        <transition on="yes" to="replace"/>
        <transition on="no" to="search"/>
    </action-state>
</flow>